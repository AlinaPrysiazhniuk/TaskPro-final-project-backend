{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "TaskPro-final-project",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://taskpro-final-project.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "Endpoints for User"
    },

    {
      "name": "Board",
      "description": "Board endpoints"
    },
    {
      "name": "Column",
      "description": "Column endpoints"
    },
    {
      "name": "Card",
      "description": "Card endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],

        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Logout object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "You have successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/auth/{id}": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Change user theme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],

        "requestBody": {
          "description": "Theme object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/api/board": {
      "post": {
        "tags": ["Board"],
        "summary": "Create Board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Board object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/board/{id}": {
      "get": {
        "tags": ["Board"],
        "summary": "Get Board by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponseById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Board"],
        "summary": "Edit Board by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Board object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponseById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Board"],
        "summary": "Delete Board by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponseById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          },
          "userId": {
            "type": "string",
            "description": "User's id"
          },
          "theme": {
            "type": "string",
            "description": "User's theme"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {}
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Logout success message",
            "example": "You have successfully logged out"
          }
        }
      },

      "BoardRequest": {
        "type": "object",
        "required": ["title", "icon", "background"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "format": "iiiiiiii"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "icon-roject"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "dark"
          }
        }
      },
      "BoardResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "format": "iiiiiiii"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "roject"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "dark"
          },
          "theme": {
            "type": "string",
            "description": "Board's theme"
          },
          "owner": {
            "type": "string",
            "description": "User's id"
          },
          "boardId": {
            "type": "string",
            "description": "Board's id"
          },
          "createdAt": {
            "type": "string",
            "description": "Board's create"
          },
          "updatedAt": {
            "type": "string",
            "description": "Board's update"
          }
        }
      },
      "BoardResponseById": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "format": "iiiiiiii"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "roject"
          },
          "background": {
            "type": "string",
            "description": "Board's background",
            "example": "dark"
          },
          "theme": {
            "type": "string",
            "description": "Board's theme"
          },
          "owner": {
            "type": "string",
            "description": "User's id"
          },
          "boardId": {
            "type": "string",
            "description": "Board's id"
          },
          "createdAt": {
            "type": "string",
            "description": "Board's create"
          },
          "updatedAt": {
            "type": "string",
            "description": "Board's update"
          }
        }
      },
      "DeleteBoardResponseById": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Logout success message",
            "example": "Delete success"
          }
        }
      }
    },
    "ChangeUserThemeRequest": {
      "type": "object",
      "required": ["theme"],
      "properties": {
        "theme": {
          "type": "string",
          "description": "Theme's title",
          "format": "iiiiiiii"
        }
      },
      "ChangeUserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "theme": {
            "type": "string",
            "description": "Board's theme"
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar"
          },

          "verify": {
            "type": "string",
            "description": "User's email verify",
            "example": "false"
          },

          "verificationToken": {
            "type": "string",
            "description": "User's verification of Token"
          },
          "createdAt": {
            "type": "string",
            "description": "Board's create"
          },
          "updatedAt": {
            "type": "string",
            "description": "Board's update"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
